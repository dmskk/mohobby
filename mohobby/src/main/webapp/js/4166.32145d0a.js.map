{"version":3,"file":"js/4166.32145d0a.js","mappings":"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","sources":["webpack://mohobby/./src/views/lecture/mycourse/classAttdLogin.vue","webpack://mohobby/src/views/lecture/mycourse/classAttdLogin.vue","webpack://mohobby/./src/views/lecture/mycourse/classAttdLogin.vue?3190","webpack://mohobby/./src/views/lecture/mycourse/classAttdLogin.vue?6c94","webpack://mohobby/../../../src/components/VCard/VCard.ts","webpack://mohobby/../../../src/components/VGrid/VFlex.ts"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"login\"}},[_c('v-app',{staticStyle:{\"margin-top\":\"-70px\"},attrs:{\"id\":\"inspire\"}},[_c('v-container',{staticStyle:{\"max-width\":\"300px\"},attrs:{\"fill-height\":\"\"}},[_c('v-flex',[_c('v-card',{attrs:{\"outlined\":\"\"}},[_c('div',{staticClass:\"pa-10\"},[_c('h1',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\" Login \")]),_c('v-text-field',{attrs:{\"label\":\"아이디\",\"prepend-inner-icon\":\"mdi-account\",\"color\":\"#2ac187\"},model:{value:(_vm.memberId),callback:function ($$v) {_vm.memberId=$$v},expression:\"memberId\"}}),_c('v-text-field',{attrs:{\"color\":\"#2ac187\",\"prepend-inner-icon\":\"mdi-lock\",\"type\":\"password\",\"label\":\"비밀번호\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"my-3\",attrs:{\"color\":\"#2ac187\",\"large\":\"\",\"block\":\"\",\"dark\":\"\",\"id\":\"loginbtn\"},on:{\"click\":function($event){return _vm.checkMember()}}},[_vm._v(\" Login \")]),_c('p',{staticStyle:{\"text-align\":\"center\"}},[_c('a',{attrs:{\"id\":\"custom-login-btn\"},on:{\"click\":function($event){return _vm.kakaoLogin()}}},[_c('img',{staticStyle:{\"height\":\"50px\",\"width\":\"195px\"},attrs:{\"src\":\"https://www.gb.go.kr/Main/Images/ko/member/certi_kakao_login.png\"}})])]),_c('div',{attrs:{\"id\":\"naverIdLogin\"}})],1)])],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\r\n    <!-- The content half -->\r\n    <div id=\"login\">\r\n        <!-- Demo content-->\r\n            <v-app \r\n                id=\"inspire\" \r\n                style=\"margin-top: -70px;\"\r\n            >\r\n                <!-- login component -->\r\n                <v-container \r\n                    style=\"max-width: 300px\" \r\n                    fill-height\r\n                >\r\n                    <v-flex>\r\n                    <v-card outlined>\r\n                        <div class=\"pa-10\">\r\n                        <h1 style=\"text-align: center\">\r\n                            Login\r\n                        </h1>\r\n                        <v-text-field\r\n                            label=\"아이디\"\r\n                            prepend-inner-icon=\"mdi-account\"\r\n                            color=\"#2ac187\"\r\n                            v-model=\"memberId\"\r\n                        ></v-text-field>\r\n                        <v-text-field\r\n                            color=\"#2ac187\"\r\n                            prepend-inner-icon=\"mdi-lock\"\r\n                            type=\"password\"\r\n                            label=\"비밀번호\"\r\n                            v-model=\"password\"\r\n                        >\r\n                        </v-text-field>\r\n                        <v-btn\r\n                            color=\"#2ac187\"\r\n                            large\r\n                            block\r\n                            dark\r\n                            class=\"my-3\"\r\n                            id=\"loginbtn\"\r\n                            @click=\"checkMember()\"\r\n                        >\r\n                            Login\r\n                        </v-btn>\r\n                        <p style=\"text-align: center;\">\r\n                        <a id=\"custom-login-btn\" @click=\"kakaoLogin()\">\r\n                        <img\r\n                            src=\"https://www.gb.go.kr/Main/Images/ko/member/certi_kakao_login.png\"\r\n                            style=\"height: 50px; width: 195px;\"\r\n                        />\r\n                        </a>\r\n                        </p>\r\n                        <!-- <p style=\"text-align: center;\"> -->\r\n                        <div id=\"naverIdLogin\"></div>\r\n                        </div>\r\n                    </v-card>\r\n                    </v-flex>\r\n                </v-container>\r\n            </v-app>\r\n        <!-- End -->\r\n    </div>\r\n    <!-- End -->\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            id: this.$route.query.id,\r\n            currId: this.$route.query.currId,\r\n            type: this.$route.query.type,\r\n            connect: this.$route.query.connect,\r\n            time: this.$route.query.time,\r\n            memberId: '',\r\n            password: '',\r\n            loginInfo: null,\r\n            email: '',\r\n            token: '',\r\n            now: this.$moment().format('YYYY-MM-DD HH:mm:ss'),\r\n            attdType: {\r\n                0: 'ATTD_DATE',     //출석\r\n                1: 'LEAVE_DATE',    //조퇴\r\n                2: 'OUT_DATE',      //외출\r\n                3: 'RECORD_TYPE',   //결석\r\n                4: 'EXIT_DATE',     //퇴실\r\n                5: 'COMEBACK_DATE'  //복귀\r\n            },\r\n        }\r\n    },\r\n    mounted() {\r\n    },\r\n    created() {\r\n        this.checkTimeLimit();\r\n    },\r\n    methods: {\r\n        kakaoLogin() {\r\n            const vm = this;\r\n            window.Kakao.Auth.loginForm({\r\n                scope: \"profile_nickname, account_email, gender, birthday\",\r\n                success: function (response) {\r\n                window.Kakao.API.request({\r\n                    // 사용자 정보 가져오기\r\n                    url: \"/v2/user/me\",\r\n                    success: (res) => {\r\n                    const kakao_account = res.kakao_account;\r\n                    console.log(kakao_account);\r\n\r\n                    vm.token = kakao_account.access_token;\r\n                    vm.email = kakao_account.email;\r\n\r\n                    vm.checkMemberByEmail();\r\n                    },\r\n                });\r\n                },\r\n                fail: function (error) {\r\n                console.log(error);\r\n                },\r\n            });\r\n        },\r\n        checkMember() {\r\n            if(this.memberId == '' || this.password == '') {\r\n                this.$swal({\r\n                    icon: \"info\",\r\n                    title: \"아이디, 비밀번호를 입력하세요.\",\r\n                });\r\n            } else {\r\n                const vm = this;\r\n                this.axios({\r\n                    url: \"/membercheck\",\r\n                    method: \"post\",\r\n                    data: {\r\n                    memberId: vm.memberId,\r\n                    password: vm.password,\r\n                    },\r\n                }).then(function (response) {\r\n                    if (response.data != \"\" && response.data.memberId != \"admin\") {\r\n                        if (response.data.delDate != null) {\r\n                            vm.$swal.fire(\"탈퇴한 회원입니다.\");\r\n                            return;\r\n                        }\r\n                        \r\n                        if(vm.memberId == vm.id) {\r\n                            vm.setAttdStatus();\r\n                        } else {\r\n                            vm.$swal.fire({\r\n                                icon: \"error\",\r\n                                title: \"출석 정보가 일치하지 않습니다.\",\r\n                            });\r\n                        }\r\n    \r\n                        vm.memberId = '';\r\n                        vm.password = '';\r\n    \r\n                    } else {\r\n                        vm.$swal.fire({\r\n                            icon: \"error\",\r\n                            title: \"아이디, 비밀번호가 일치하지 않습니다.\",\r\n                        });\r\n                    }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n\r\n        },\r\n        checkMemberByEmail() {\r\n            const vm = this;\r\n            this.axios({\r\n                url: \"/memberEmail/\" + this.email,\r\n                method: \"get\",\r\n            }).then(function (response) {\r\n                if (response.data !== \"\" && response.data.constructor === Object) {\r\n                    //this.$store.commit(\"setId\", this.memberId);\r\n                    if (response.data.delDate != null) {\r\n                        vm.$swal.fire(\"탈퇴한 회원입니다.\");\r\n                        return;\r\n                    }\r\n                    this.$router.push(\"/\");\r\n                } else {\r\n                    vm.$swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"등록되지 않은 계정입니다.\",\r\n                    });\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        },\r\n        setAttdStatus() {\r\n            let req = {\r\n                memberId: this.id,\r\n                currId: this.currId,\r\n                type: this.type,\r\n                column: this.attdType[`${this.type}`],\r\n                value: this.type == 3 ? '3' : this.now,\r\n            };\r\n            let time = this.time + ':00';\r\n            let nowTime = this.$moment(this.now).format('HH:mm');\r\n            if(this.type == 0 && time < nowTime) {\r\n                req.lateCheck=1;\r\n                this.$swal('출석이 완료되었습니다!', '지각이지만.. 화이팅!', 'success');\r\n            } else if (this.type == 1) {\r\n                this.$swal('조퇴가 완료되었습니다!', '', 'success');\r\n            } else if (this.type == 2) {\r\n                this.$swal('외출이 완료되었습니다!', '', 'success');\r\n            } else if (this.type == 4) {\r\n                this.$swal('퇴실이 완료되었습니다!', '', 'success');\r\n            } else if (this.type == 5) {\r\n                this.$swal('복귀가 완료되었습니다!', '', 'success');\r\n            }\r\n\r\n            this.send(req);\r\n        },\r\n        send(req) {\r\n            this.axios.post('/class/attd', req);\r\n        },\r\n        checkTimeLimit() {\r\n            let now = this.now;\r\n            let connect = this.connect.substr(0, 4)+'-'+this.connect.substr(4, 2)+'-'+this.connect.substr(6, 2)+' '\r\n                            +this.connect.substr(8, 2)+':'+this.connect.substr(10, 2)+':'+this.connect.substr(12, 2);\r\n            let income = this.$moment(connect).format('YYYY-MM-DD HH:mm:ss');\r\n            let limit = this.$moment(income).add(5, \"m\").format('YYYY-MM-DD HH:mm:ss');\r\n            if(!(limit>now)) {\r\n                document.body.innerHTML = '';\r\n                this.$swal('시간이 초과되었습니다!', '출결QR을 재발급 받으세요.', 'error');\r\n            };\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./classAttdLogin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./classAttdLogin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./classAttdLogin.vue?vue&type=template&id=a897f54c&\"\nimport script from \"./classAttdLogin.vue?vue&type=script&lang=js&\"\nexport * from \"./classAttdLogin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","import './_grid.sass'\n\nimport Grid from './grid'\n\nexport default Grid('flex')\n"],"names":["_c","staticStyle","attrs","staticClass","value","_vm","callback","memberId","expression","model","on","staticRenderFns","render","data","id","currId","type","connect","time","password","loginInfo","email","token","now","attdType","mounted","created","methods","kakaoLogin","window","scope","success","url","console","vm","fail","checkMember","icon","title","method","then","catch","checkMemberByEmail","setAttdStatus","column","req","send","checkTimeLimit","document","component","mixins","Loadable","Routable","VSheet","extend","name","props","flat","Boolean","hover","img","String","link","loaderHeight","Number","default","raised","computed","classes","this","isClickable","loading","disabled","styles","style","background","genProgress","$createElement","key","h","tag","generateRouteLink","tabindex","setBackgroundColor","color","$slots","Grid"],"sourceRoot":""}