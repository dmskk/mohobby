{"version":3,"file":"js/2714.207b24ae.js","mappings":"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","sources":["webpack://mohobby/./src/views/user/LoginView.vue","webpack://mohobby/src/views/user/LoginView.vue","webpack://mohobby/./src/views/user/LoginView.vue?c93d","webpack://mohobby/./src/views/user/LoginView.vue?ea94","webpack://mohobby/../../../src/components/VCard/VCard.ts","webpack://mohobby/../../../src/components/VGrid/VFlex.ts","webpack://mohobby/../../../src/components/VGrid/VLayout.ts"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"background-color\":\"#E9E8EA\"}},[_c('v-img',{attrs:{\"src\":require('@/assets/image/web/login-1.jpg')}}),_c('v-container',{staticStyle:{\"max-width\":\"450px\"},attrs:{\"fill-height\":\"\"}},[_c('v-layout',{staticStyle:{\"padding\":\"20px 0px 60px 0px\"},attrs:{\"align-center\":\"\",\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-card',{attrs:{\"elevation\":\"0\"}},[_c('div',{staticClass:\"pa-10\"},[_c('h1',{staticClass:\"mb-10\",staticStyle:{\"text-align\":\"center\"}},[_vm._v(\" Login \")]),_c('form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.checkMember.apply(null, arguments)}}},[_c('v-text-field',{attrs:{\"label\":\"아이디\",\"prepend-inner-icon\":\"mdi-account\",\"color\":\"#2255b1\"},model:{value:(_vm.memberId),callback:function ($$v) {_vm.memberId=$$v},expression:\"memberId\"}}),_c('v-text-field',{attrs:{\"color\":\"#2255b1\",\"prepend-inner-icon\":\"mdi-lock\",\"type\":\"password\",\"label\":\"비밀번호\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"mb-3\",attrs:{\"type\":\"submit\",\"color\":\"#F9E000\",\"depressed\":\"\",\"large\":\"\",\"block\":\"\"}},[_vm._v(\" Login \")]),_c('v-btn',{attrs:{\"color\":\"#2255b1\",\"depressed\":\"\",\"large\":\"\",\"block\":\"\",\"dark\":\"\"},on:{\"click\":function($event){return _vm.$router.push('/register')}}},[_vm._v(\" Sign Up \")]),_c('div',{staticClass:\"d-flex justify-center\"},[_c('v-btn',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.findMemberId()}}},[_vm._v(\" 아이디찾기\")]),_c('v-btn',{staticStyle:{\"font-weight\":\"bold\"},attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.findMemberPassword()}}},[_vm._v(\" 비밀번호 찾기\")])],1),_c('br'),_c('div',{staticClass:\"d-flex justify-center\"},[_c('a',{attrs:{\"id\":\"custom-login-btn\"},on:{\"click\":function($event){return _vm.kakaoLogin()}}},[_c('img',{staticStyle:{\"height\":\"40px\",\"width\":\"170px\",\"margin-right\":\"30px\"},attrs:{\"src\":\"https://www.gb.go.kr/Main/Images/ko/member/certi_kakao_login.png\"}})]),_c('div',{attrs:{\"id\":\"naverIdLogin\"}})])],1)])])],1)],1)],1),_c('v-img',{attrs:{\"src\":require('@/assets/image/web/footer.jpg')}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"background-color: #E9E8EA\">\r\n      <v-img\r\n        :src=\"require('@/assets/image/web/login-1.jpg')\"\r\n      />\r\n    <!-- login component -->\r\n    <v-container style=\"max-width: 450px;\" fill-height>\r\n      <v-layout align-center row wrap style=\"padding: 20px 0px 60px 0px;\">\r\n        <v-flex xs12>\r\n          <v-card elevation=\"0\">\r\n            <div class=\"pa-10\">\r\n              <h1 style=\"text-align: center\" class=\"mb-10\">\r\n                Login\r\n              </h1>\r\n              <form v-on:submit.prevent=\"checkMember\">\r\n                <v-text-field\r\n                  label=\"아이디\"\r\n                  prepend-inner-icon=\"mdi-account\"\r\n                  color=\"#2255b1\"\r\n                  v-model=\"memberId\"\r\n                ></v-text-field>\r\n                <v-text-field\r\n                  color=\"#2255b1\"\r\n                  prepend-inner-icon=\"mdi-lock\"\r\n                  type=\"password\"\r\n                  label=\"비밀번호\"\r\n                  v-model=\"password\"\r\n                >\r\n                </v-text-field>\r\n                <v-btn\r\n                  type=\"submit\"\r\n                  color=\"#F9E000\"\r\n                  depressed\r\n                  large\r\n                  block\r\n                  class=\"mb-3\"\r\n                >\r\n                  Login\r\n                </v-btn>\r\n                <v-btn\r\n                  color=\"#2255b1\"\r\n                  depressed\r\n                  large\r\n                  block\r\n                  dark\r\n                  @click=\"$router.push('/register')\"\r\n                >\r\n                  Sign Up\r\n                </v-btn>\r\n                <div class=\"d-flex justify-center\">\r\n                  <v-btn\r\n                    style=\"font-weight: bold\"\r\n                    @click=\"findMemberId()\"\r\n                    text\r\n                  >\r\n                    아이디찾기</v-btn\r\n                  >\r\n                  <v-btn\r\n                    style=\"font-weight: bold\"\r\n                    @click=\"findMemberPassword()\"\r\n                    text\r\n                  >\r\n                    비밀번호 찾기</v-btn\r\n                  >\r\n                </div>\r\n                <br />\r\n                <!-- <p style=\"text-align: center;\"> -->\r\n                <div class=\"d-flex justify-center\">\r\n                    <a id=\"custom-login-btn\" @click=\"kakaoLogin()\">\r\n                      <img\r\n                        src=\"https://www.gb.go.kr/Main/Images/ko/member/certi_kakao_login.png\"\r\n                        style=\"\r\n                          height: 40px;\r\n                          width: 170px;\r\n                          margin-right: 30px;\r\n                        \"\r\n                      />\r\n                    </a>\r\n                    <!-- </p> -->\r\n                    <!-- <p style=\"text-align: center;\"> -->\r\n                    <div id=\"naverIdLogin\"></div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </v-card>\r\n        </v-flex>\r\n      </v-layout>\r\n    </v-container>\r\n    <v-img\r\n      :src=\"require('@/assets/image/web/footer.jpg')\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.login,\r\n.image {\r\n  min-height: 100vh;\r\n}\r\n\r\n.bg-image {\r\n  background-image: url(\"@/assets/image/user/logo.jpeg\");\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #2ac187;\r\n  border: #2ac187;\r\n}\r\n</style>\r\n<script>\r\n\r\nimport router from \"@/router\";\r\nexport default {\r\n  data: () => ({\r\n    step: 1,\r\n    naverLogin: null,\r\n    memberId: \"\",\r\n    password: \"\",\r\n    loginInfo: null,\r\n    email: \"\",\r\n    token: \"\",\r\n  }),\r\n  props: {\r\n    source: String,\r\n  },\r\n  beforeCreate() {},\r\n  created() {},\r\n  beforeMount() {},\r\n  mounted() {\r\n    // login페이지 띄울때 무조건 로그아웃\r\n    this.$store.commit(\"setIsLoginFalse\");\r\n    this.$store.commit(\"logout\");\r\n    this.$store.commit(\"setUserData\", null);\r\n\r\n    this.naverLogin = new window.naver.LoginWithNaverId({\r\n      clientId: \"qtK4gDKw7gcdHhTwYZpV\",\r\n      callbackUrl: \"http://localhost:8080/login\",\r\n      isPopup: false, // 팝업을 통한 연동 처리여부\r\n      loginButton: {\r\n        color: \"green\",\r\n        type: 3,\r\n        height: 40,\r\n        width: 150,\r\n      }, // 로그인 버튼의 타입을 지정\r\n    });\r\n\r\n    // 설정 정보를 초기화하고 연동을 준비\r\n    this.naverLogin.init();\r\n\r\n    this.naverLogin.getLoginStatus((status) => {\r\n      const vm = this;\r\n      if (status) {\r\n        console.log(status);\r\n        console.log(this.naverLogin.user);\r\n\r\n        // 필수적으로 받아야하는 프로필 정보가 있다면 callback처리 시점에 체크\r\n        var email = this.naverLogin.user.getEmail();\r\n        if (email == \"undifined\" || email == null) {\r\n          alert(\"이메일은 필수 정보입니다. 정보 제공을 동의해주세요.\");\r\n          // 사용자 정보 재동의를 위해 다시 네이버 동의 페이지로 이동함\r\n          this.naverLogin.reprompt();\r\n          return;\r\n        }\r\n        vm.email = email;\r\n        vm.checkMemberByEmail();\r\n      } else {\r\n        console.log(\"callback 처리에 실패하였습니다.\");\r\n      }\r\n    });\r\n  },\r\n  beforeUpdate() {},\r\n  updated() {},\r\n  beforeUnmount() {},\r\n  unmounted() {},\r\n  methods: {\r\n    kakaoLogin() {\r\n      const vm = this;\r\n      window.Kakao.Auth.loginForm({\r\n        scope: \"profile_nickname, account_email, gender, birthday\", //동의항목 페이지에 있는 개인정보 보호 테이블의 활성화된 ID값을 넣습니다.\r\n        success: function (response) {\r\n          console.log(response); // 로그인 성공하면 받아오는 데이터\r\n          window.Kakao.API.request({\r\n            // 사용자 정보 가져오기\r\n            url: \"/v2/user/me\",\r\n            success: (res) => {\r\n              const kakao_account = res.kakao_account;\r\n              vm.token = kakao_account.access_token;\r\n              vm.email = kakao_account.email;\r\n\r\n              vm.checkMemberByEmail();\r\n            },\r\n          });\r\n          // window.location.href='/' //리다이렉트 되는 코드\r\n        },\r\n        fail: function (error) {\r\n          console.log(error);\r\n        },\r\n      });\r\n    },\r\n    kakaoLogout() {\r\n      if (!Kakao.Auth.getAccessToken()) {\r\n        console.log(\"Not logged in.\");\r\n        return;\r\n      }\r\n      Kakao.Auth.logout(function (response) {\r\n        alert(response + \" logout\");\r\n        // window.location.href='/'\r\n      });\r\n    },\r\n\r\n    // 멤버 check해서 일반로그인\r\n    checkMember() {\r\n      console.log(this.memberId, this.password);\r\n\r\n      const vm = this;\r\n      this.axios({\r\n        url: \"/membercheck\",\r\n        method: \"post\",\r\n        data: {\r\n          memberId: this.memberId,\r\n          password: this.password,\r\n        },\r\n      })\r\n        .then(function (response) {\r\n          if (response.data != \"\" && response.data.memberId != \"admin\") {\r\n            console.log(\"if문 안에\" + response.data);\r\n            if (response.data.delDate != null) {\r\n              vm.$swal.fire(\"탈퇴한 회원입니다.\");\r\n              return;\r\n            }\r\n            // 유저 id, 유저 정보 넣기\r\n            vm.$store.state.id = vm.memberId;\r\n            vm.$store.commit(\"setUserData\", response.data);\r\n            // 유효성 검사\r\n            // 메인으로 이동(로그인성공)\r\n            vm.$router.push(\"/\");\r\n          } else if (response.data != \"\" && response.data.memberId == \"admin\") {\r\n            console.log(\"else if문 안에\" + response.data);\r\n            vm.$store.state.id = vm.memberId;\r\n            vm.$store.commit(\"setUserData\", response.data);\r\n            // 메인으로 이동(로그인성공)\r\n            vm.$router.push(\"/adminuser\");\r\n          } else {\r\n            vm.$swal.fire({\r\n              icon: \"error\",\r\n              title: \"아이디, 비밀번호가 일치하지 않습니다.\",\r\n            });\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    // 네이버, 카카오 로그인 시 이메일 있는지 검사\r\n    checkMemberByEmail() {\r\n      console.log(this.email);\r\n      const vm = this;\r\n      this.axios({\r\n        url: \"/memberEmail/\" + this.email,\r\n        method: \"get\",\r\n      })\r\n        .then(function (response) {\r\n          console.log(response);\r\n          if (response.data !== \"\" && response.data.constructor === Object) {\r\n            console.log(response.data);\r\n            if (response.data.delDate != null) {\r\n              vm.$swal.fire(\"탈퇴한 회원입니다.\");\r\n              return;\r\n            }\r\n            if (response.data.role == 4) {\r\n              vm.$swal.fire(\"관리자에 의해 접근 금지된 유저입니다.\");\r\n              return;\r\n            }\r\n            // vuex를 이용해 로그인 정보 저장\r\n            vm.$store.state.id = vm.memberId;\r\n            vm.$store.commit(\"setIsLoginTrue\");\r\n            vm.$store.commit(\"setUserData\", response.data);\r\n            // 로그인 성공시 메인으로 이동\r\n            this.$router.push(\"/\");\r\n          } else {\r\n            vm.$router.push({\r\n              name: \"register\",\r\n              params: { email: vm.email },\r\n            });\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    // 아이디 찾기\r\n    findMemberId() {\r\n      const vm = this;\r\n      this.$swal\r\n        .fire({\r\n          title: \"가입 시 입력한 이메일을 입력하세요\",\r\n          html: `<input type=\"text\" id=\"email\" class=\"swal2-input\" placeholder=\"email\">`,\r\n          confirmButtonText: \"제출\",\r\n          cancelButtonText: \"취소\",\r\n          focusConfirm: false,\r\n          preConfirm: () => {\r\n            const email = this.$swal.getPopup().querySelector(\"#email\").value;\r\n            if (!email) {\r\n              this.$swal.showValidationMessage(`이메일을 입력해 주세요`);\r\n            }\r\n            return { email: email };\r\n          },\r\n        })\r\n        .then((result) => {\r\n          vm.email = result.value.email;\r\n          this.axios({\r\n            url: \"/memberEmail/\" + vm.email,\r\n            method: \"get\",\r\n          })\r\n            .then(function (response) {\r\n              vm.$swal.fire(\r\n                \"가입하신 아이디는\" + response.data.memberId + \"입니다.\"\r\n              );\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        });\r\n    },\r\n    // 비밀번호 찾기\r\n    findMemberPassword() {\r\n      const vm = this;\r\n      this.$swal\r\n        .fire({\r\n          title: \"아이디를 입력하세요\",\r\n          html: `<input type=\"text\" id=\"memberId\" class=\"swal2-input\" placeholder=\"memberId\">`,\r\n          confirmButtonText: \"제출\",\r\n          cancelButtonText: \"취소\",\r\n          focusConfirm: false,\r\n          preConfirm: () => {\r\n            const memberId = this.$swal\r\n              .getPopup()\r\n              .querySelector(\"#memberId\").value;\r\n            if (!memberId) {\r\n              this.$swal.showValidationMessage(`아이디를 입력해 주세요`);\r\n            }\r\n            return { memberId: memberId };\r\n          },\r\n        })\r\n        .then((result) => {\r\n          vm.memberId = result.value.memberId;\r\n          this.axios({\r\n            url: \"/member/\" + vm.memberId,\r\n            method: \"get\",\r\n          })\r\n            .then(function (response) {\r\n              vm.$swal.fire(\r\n                \"찾으시는 비밀번호는\" + response.data.password + \"입니다.\"\r\n              );\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LoginView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LoginView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LoginView.vue?vue&type=template&id=3a64d71a&\"\nimport script from \"./LoginView.vue?vue&type=script&lang=js&\"\nexport * from \"./LoginView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LoginView.vue?vue&type=style&index=0&id=3a64d71a&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","import './_grid.sass'\n\nimport Grid from './grid'\n\nexport default Grid('flex')\n","import './_grid.sass'\n\nimport Grid from './grid'\n\nexport default Grid('layout')\n"],"names":["attrs","require","staticStyle","_c","staticClass","on","$event","preventDefault","_vm","model","callback","expression","value","password","_v","render","staticRenderFns","data","step","naverLogin","memberId","loginInfo","email","token","props","source","beforeCreate","created","beforeMount","mounted","clientId","callbackUrl","isPopup","loginButton","color","type","height","width","console","alert","vm","beforeUpdate","updated","beforeUnmount","unmounted","methods","kakaoLogin","window","scope","success","url","fail","kakaoLogout","Kakao","checkMember","method","then","icon","title","catch","checkMemberByEmail","name","params","findMemberId","fire","html","confirmButtonText","cancelButtonText","focusConfirm","preConfirm","result","findMemberPassword","getPopup","querySelector","component","mixins","Loadable","Routable","VSheet","extend","flat","Boolean","hover","img","String","link","loaderHeight","Number","default","raised","computed","classes","this","isClickable","loading","disabled","styles","style","background","genProgress","$createElement","key","h","tag","generateRouteLink","tabindex","setBackgroundColor","$slots","Grid"],"sourceRoot":""}